"""
 Test map methods

 Author: Irwin Rodr√≠guez <rodriguez.irwin@gmail.com>
 Date: 2023-02-24
"""

declare lmPrices = {
    "A": 1.0,
    "B": 2.0,
    "C": 3.0,
    "D": 4.0,
    "E": 5.0,
    "F": 6.0,
    "G": 7.0,
    "H": 8.0,
    "I": 9.0,
    "J": 10.0,
    "K": 11.0,
    "L": 12.0,
    "M": 13.0,
    "N": 14.0,
    "O": 15.0,
    "P": 16.0,
    "Q": 17.0,
    "R": 18.0,
    "S": 19.0,
    "T": 20.0,
    "U": 21.0,
    "V": 22.0,
    "W": 23.0,
    "X": 24.0,
    "Y": 25.0,
    "Z": 26.0
}

# Map methods

# get()
assert(lmPrices.get("A") == 1.0, "get() method failed")

# set()
lmPrices.set("A", 2.0)
assert(lmPrices.get("A") == 2.0, "set() method failed")

# len()
assert(lmPrices.len() == 26, "len() method failed")

# keys()
assert(lmPrices.keys() == ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"], "keys() method failed")

# values()
assert(lmPrices.values() == [2.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0], "values() method failed")

# contains()
assert(lmPrices.contains("A") == true, "contains() method failed")

# remove()
lmPrices.remove("A")
assert(lmPrices.contains("A") == false, "remove() method failed")

# clear()
lmPrices.clear()
assert(lmPrices.len() == 0, "clear() method failed")

# isEmpty()
assert(lmPrices.isEmpty() == true, "isEmpty() method failed")

# clone()
declare lmFruitUnitPrices = {
    "Apple": 1.0,
    "Banana": 2.0,
    "Orange": 3.0,
    "Pineapple": 4.0,
    "Strawberry": 5.0
}

declare lmCloned = lmFruitUnitPrices.clone()

assert(lmCloned.get("Apple") == 1.0, "clone() method failed")

# Iterate over keys
println("============Map keys============")
for each lvKey in lmFruitUnitPrices.keys()
    println(lvKey)
end

# Iterate over values
println("============Map values============")
for each lvValue in lmFruitUnitPrices.values()
    println(lvValue)
end

# Iterate over keys and values
println("============Map keys and values============")
for each lvEntry in lmFruitUnitPrices
    println(lvEntry.key & " = " & lvEntry.value)
end