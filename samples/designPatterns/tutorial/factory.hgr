"""
    Original code: https://www.tutorialspoint.com/design_pattern/index.htm
    Design patterns represent the best practices used by experienced object-oriented software 
    developers. Design patterns are solutions to general problems that software developers
    faced during software development. These solutions were obtained by trial and error by 
    numerous software developers over quite a substantial period of time.

    Pattern: Factory
    
    Description:
        Factory pattern is one of the most used design patterns in Java. This type of design pattern 
        comes under creational pattern as this pattern provides one of the best ways to create an object.
        In Factory pattern, we create object without exposing the creation logic to the client and refer 
        to newly created object using a common interface.    

    Hungaro code writer: Irwin Rodr√≠guez <rodriguez.irwin@gmail.com>
    Date: 2023-02-28
"""

declare lcShape
    pDraw
    end
end

declare lcRectangle as lcShape
    pDraw
        println("Inside Rectangle::draw() method.")
    end
end

declare lcSquare as lcShape
    pDraw
        println("Inside Square::draw() method.")
    end
end

declare lcCircle as lcShape
    pDraw
        println("Inside Circle::draw() method.")
    end
end

declare lcShapeFactory
    # use fGetShape method to get object of type shape
    fGetShape(psShapeType)
        if psShapeType == "CIRCLE"
            return new lcCircle()
        end
        
        if psShapeType == "RECTANGLE"
            return new lcRectangle()
        end

        if psShapeType == "SQUARE"
            return new lcSquare()
        end

        return null
    end
end

declare lpMain
    declare loShapeFactory = new lcShapeFactory()

    # get an object of Circle and call its draw method.
    declare loShape1 = loShapeFactory.fGetShape("CIRCLE")

    # call draw method of Circle
    loShape1.pDraw()

    # get an object of Rectangle and call its draw method.
    declare loShape2 = loShapeFactory.fGetShape("RECTANGLE")

    # call draw method of Rectangle
    loShape2.pDraw()

    # get an object of Square and call its draw method.
    declare loShape3 = loShapeFactory.fGetShape("SQUARE")

    # call draw method of square
    loShape3.pDraw()
end

lpMain()

# Output
# Inside Circle::draw() method.
# Inside Rectangle::draw() method.
# Inside Square::draw() method.
