"""
    Original code: https://www.tutorialspoint.com/design_pattern/index.htm
    Design patterns represent the best practices used by experienced object-oriented software 
    developers. Design patterns are solutions to general problems that software developers
    faced during software development. These solutions were obtained by trial and error by 
    numerous software developers over quite a substantial period of time.

    Pattern: Singleton
    Description:
        Singleton pattern is one of the simplest design patterns in Java. This type of design pattern 
        comes under creational pattern as this pattern provides one of the best ways to create an object.

        This pattern involves a single class which is responsible to create an object while making sure 
        that only single object gets created. This class provides a way to access its only object which 
        can be accessed directly without need to instantiate the object of the class. 
    
    Hungaro code writer: Irwin Rodr√≠guez <rodriguez.irwin@gmail.com>
    Date: 2023-02-28
"""

declare lcSingleObject
    # Create an object of SingleObject
    oInstance = null

    pInit(psClassName, psName, pnAge)
        oInstance = new object(psClassName, psName, pnAge)
    end

    fGetInstance
        return oInstance
    end
end

# demo class
declare lcPerson
    sName = ""
    nAge = 0

    pInit(psName, pnAge)
        sName = psName
        nAge = pnAge
    end

    pShowMessage
        println("Hello World!")
    end    
end

# main procedure
declare lpMain  
    declare loObject = new lcSingleObject("lcPerson", "Irwin", 37).fGetInstance()

    # show the message
    loObject.pShowMessage()
end

lpMain()