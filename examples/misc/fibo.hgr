"""
 Fibbonacci Sequence

 Author: Irwin Rodr√≠guez <rodriguez.irwin@gmail.com>
 Date: 2023-02-23
"""

pPrintLn("Two different functions to compute Fibbonacci Sequence")
pPrintLn("fFibonacci1() is a non-recursive version")
pPrintLn("fFibonacci2() is a recursive version")

# Non-recursive version
def fFibonacci1(pnX)
    let nA = 0, nB = 1, nC = 0
    pPrint(nA, " ")
    while nB < pnX
        nC = nB
        nB = nA + nB
        nA = nC
        pPrint(nA, " ")
    end
    pPrintLn(" ")
    return nA
end

# Recursive version
def fFibonacci2(pnX)
    if pnX == 0 or pnX == 1
        return pnX
    end
    return fFibonacci2(pnX - 1) + fFibonacci2(pnX - 2)
end

# Test
let nResult = fFibonacci1(10000)
if nResult == 6765
    pPrintLn("fFibonacci1() is correct")
else
    pPrintLn("fFibonacci1() is incorrect")
end

pPrintLn("Recursive routine to compute Fibbonacci Sequence")
pAssert(fFibonacci2(0) == 0, "fFibonacci2(0) is incorrect")
pAssert(fFibonacci2(1) == 1, "fFibonacci2(1) is incorrect")
pAssert(fFibonacci2(2) == 1, "fFibonacci2(2) is incorrect")
pAssert(fFibonacci2(3) == 2, "fFibonacci2(3) is incorrect")
pAssert(fFibonacci2(4) == 3, "fFibonacci2(4) is incorrect")
pAssert(fFibonacci2(5) == 5, "fFibonacci2(5) is incorrect")
pAssert(fFibonacci2(6) == 8, "fFibonacci2(6) is incorrect")
pAssert(fFibonacci2(7) == 13, "fFibonacci2(7) is incorrect")
pAssert(fFibonacci2(8) == 21, "fFibonacci2(8) is incorrect")
pAssert(fFibonacci2(9) == 34, "fFibonacci2(9) is incorrect")
pAssert(fFibonacci2(10) == 55, "fFibonacci2(10) is incorrect")
pAssert(fFibonacci2(11) == 89, "fFibonacci2(11) is incorrect")

pPrintLn(" ")

# final assert to automatically check if all tests passed
pAssert(true, "This test should always pass")