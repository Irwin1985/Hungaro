"""
 Method call

 Author: Irwin Rodr√≠guez <rodriguez.irwin@gmail.com>
 Date: 2023-02-26
"""

def cToggle
    pInit(pbStartState)
        @bState = pbStartState
    end

    fValue
        return @bState
    end

    fActivate
        @bState = !@bState
        return poThis
    end
end

def cNthToggle as cToggle
    pInit(pbStartState, pnMaxCounter)
        super(pbStartState)
        @nCountMax = pnMaxCounter
        @nCount = 0
    end

    fActivate
        @nCount += 1
        if @nCount >= @nCountMax
            super()
            @nCount = 0
        end

        return poThis
    end
end

let nStart = fTick()
let nN = 100000
let bVal = true
let oToggle = new cToggle(bVal)

for nI = 1 to nN
    bVal = oToggle.fActivate().fValue()
    bVal = oToggle.fActivate().fValue()
    bVal = oToggle.fActivate().fValue()
    bVal = oToggle.fActivate().fValue()
    bVal = oToggle.fActivate().fValue()
    bVal = oToggle.fActivate().fValue()
    bVal = oToggle.fActivate().fValue()
    bVal = oToggle.fActivate().fValue()
    bVal = oToggle.fActivate().fValue()
    bVal = oToggle.fActivate().fValue()
end

pPrintLn(oToggle.fValue())

bVal = true
let oNToggle = new cNthToggle(bVal, 3)

for nI = 1 to nN
    bVal = oNToggle.fActivate().fValue()
    bVal = oNToggle.fActivate().fValue()
    bVal = oNToggle.fActivate().fValue()
    bVal = oNToggle.fActivate().fValue()
    bVal = oNToggle.fActivate().fValue()
    bVal = oNToggle.fActivate().fValue()
    bVal = oNToggle.fActivate().fValue()
    bVal = oNToggle.fActivate().fValue()
    bVal = oNToggle.fActivate().fValue()
    bVal = oNToggle.fActivate().fValue()
end

pPrintLn(oNToggle.fValue())

pPrintLn(fTack(nStart))

# final assert to automatically check if all tests passed
pAssert(true, "This test should always pass")