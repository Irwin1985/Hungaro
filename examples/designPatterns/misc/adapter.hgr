"""
 Adapter

 Author: Irwin Rodr√≠guez <rodriguez.irwin@gmail.com>
 Date: 2023-02-27
"""

# Adapter allows fitting square pegs into round holes.
def cSquarePegAdapter
    oPeg = null

    pInit(poPeg)
        @oPeg = poPeg
    end

    fGetRadius
        let nResult = 0.0
        # Calculate a minimun circle radius, which can fit this peg.
        nResult = (sqrt(pow((@oPeg.fGetWidth() / 2), 2) * 2))
        return nResult
    end
end

# RoundHoles are compatible with RoundPegs.
def cRoundHole
    nRadius = 0.0
    pInit(pnRadius)
        @nRadius = pnRadius
    end

    fGetRadius
        return @nRadius
    end

    fFits(poPeg)
        let bResult = false
        bResult = (fGetRadius() >= poPeg.fGetRadius())
        return bResult
    end
end

# RoundPegs are compatible with RoundHoles.
def cRoundPeg
    nRadius = 0.0
    
    pInit(pnRadius)
        @nRadius = pnRadius
    end

    fGetRadius
        return @nRadius
    end
end

# SquarePegs are not compatible with RoundHoles (they were implemented by
# previous development team). But we have to integrate them into our program.
def cSquarePeg
    nWidth = 0.0

    pInit(pnWidth)
        @nWidth = pnWidth
    end

    fGetWidth
        return @nWidth
    end

    fGetSquare
        let nResult = 0.0
        nResult = pow(@nWidth, 2)
        return nResult
    end
end

# Client code can work with any subclass of RoundPeg.
def pMain
    # Round fits round, no surprise.
    let oHole = new cRoundHole(5)
    let oRoundPeg = new cRoundPeg(5)
    if oHole.fFits(oRoundPeg)
        println("Round peg r5 fits round hole r5.")
    end

    let oSmallSqPeg = new cSquarePeg(2)
    let oLargeSqPeg = new cSquarePeg(20)

    # Adapter solves the problem.
    let oSmallSqPegAdapter = new cSquarePegAdapter(oSmallSqPeg)
    let oLargeSqPegAdapter = new cSquarePegAdapter(oLargeSqPeg)
    if oHole.fFits(oSmallSqPegAdapter)
        println("Square peg w2 fits round hole r5.")
    end
    if not oHole.fFits(oLargeSqPegAdapter)
        println("Square peg w20 does not fit into round hole r5.")
    end
end

pMain()