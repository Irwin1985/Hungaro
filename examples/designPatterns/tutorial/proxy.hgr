"""
    Original code: https://www.tutorialspoint.com/design_pattern/index.htm
    Design patterns represent the best practices used by experienced object-oriented software 
    developers. Design patterns are solutions to general problems that software developers
    faced during software development. These solutions were obtained by trial and error by 
    numerous software developers over quite a substantial period of time.

    Pattern: Proxy
    Description:
        In proxy pattern, a class represents functionality of another class. 
        This type of design pattern comes under structural pattern.

    Hungaro code writer: Irwin Rodr√≠guez <rodriguez.irwin@gmail.com>
    Date: 2023-02-28
"""

def cImage
    -pDisplay()
end

def cRealImage as cImage
    sFileName = ""

    pInit(psFileName)
        poThis.sFileName = psFileName
        pLoadFromDisk()        
    end

    pDisplay
        println("Displaying " & poThis.sFileName)
    end

    pLoadFromDisk
        println("Loading " & poThis.sFileName)
    end
end

def cProxyImage as cImage
    oRealImage = null
    sFileName = ""

    pInit(psFileName)
        poThis.sFileName = psFileName
    end

    pDisplay
        if poThis.oRealImage == null
            poThis.oRealImage = new cRealImage(poThis.sFileName)
        end
        poThis.oRealImage.pDisplay()
    end
end

def pMain
    let oImage = new cProxyImage("test_10mb.jpg")

    # Image will be loaded from disk
    oImage.pDisplay()
    println("")

    # Image will not be loaded from disk
    oImage.pDisplay()
end

pMain()

# Output:
# Loading test_10mb.jpg
# Displaying test_10mb.jpg
#
# Displaying test_10mb.jpg
